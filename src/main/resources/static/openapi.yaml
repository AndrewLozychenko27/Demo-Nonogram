openapi: 3.0.3
info:
  title: Nonogram API
  version: "0.8.3"
servers:
  - url: http://localhost:8080/
    description: Development server
paths:
  /game/leaders:
    get:
      summary: Used to get a list of leaders
      tags:
        - Game
      responses:
        "200":
          description: Returns a page with the list of leaders
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/GameStats"
  /puzzle/list:
    get:
      summary: Used to get a list of puzzles
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          description: The number of a page
        - in: query
          name: size
          schema:
            type: integer
            example: 10
          description: The quantity of items to be displayed on a page
      tags:
       - Puzzle
      responses:
        "200":
          description: Returns a page with the list of puzzles
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/Puzzles"
  /puzzle/create:
    get:
      summary: Used to get a puzzle creation page
      tags:
        - Puzzle
      responses:
        "200":
          description: Returns a page that is the first puzzle creation stage
          content:
            text/html:
              example: <html></html>
    post:
      summary: Used to initiate a puzzle creation
      tags:
        - Puzzle
      parameters:
        - in: query
          name: name
          schema:
            type: string
            example: My New Puzzle
          description: The name of a new puzzle
        - in: query
          name: width
          schema:
            type: integer
            minimum: 10
            maximum: 40
            example: 10
          description: The width of a new puzzle
        - in: query
          name: height
          schema:
            type: integer
            minimum: 10
            maximum: 40
            example: 10
          description: The height of a new puzzle
        - in: query
          name: fill
          schema:
            type: string
            example: MANUALLY
          description: The fill mode of a new puzzle creation
        - in: query
          name: image
          schema:
            type: string
            format: binary
          description: The image for a puzzle generation when option generate by image is selected
      responses:
        "200":
          description: Returns next stage page regarding to the selected puzzle creation option
          content:
            text/html:
              example: <html>...</html>
  /puzzle/fill:
    post:
      summary: Used to fill new puzzle with cells when option MANUALLY is selected
      tags:
        - Puzzle
      parameters:
        - in: query
          name: coordinates
          schema:
            type: array
            items:
              type: string
              example: 1:1
      responses:
        "200":
          description: Returns the same page with error messages
          content:
            text/html:
              example: <html>...</html>
        "301":
          description: Redirects to /puzzle/list when the puzzle filled successfully
          content:
            text/html:
              example: <html>...</html>
  /puzzle/save/image:
    post:
      summary: Used to save the puzzle generated by image
      tags:
        - Puzzle
      parameters:
        - in: query
          name: puzzleId
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "301":
          description: Redirects to /puzzle/list when the puzzle filled successfully
          content:
            text/html:
              example: <html>...</html>
  /puzzle/save/random:
    post:
      summary: Used to save the puzzle generated by image
      tags:
        - Puzzle
      responses:
        "301":
          description: Redirects to /puzzle/list when the puzzle filled successfully
          content:
            text/html:
              example: <html>...</html>
  /puzzle/{puzzle_id}/view:
    get:
      summary: Used to get info about the certain puzzle
      tags:
        - Puzzle
      parameters:
        - in: path
          required: true
          name: puzzle_id
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Returns a page with info about the puzzle 
          content:
            text/html:
              example: <html>...</html>
  /puzzle/{puzzle_id}/play:
    get:
      summary: Used to get playing field for a certain puzzle
      tags:
        - Puzzle
      parameters:
        - in: path
          required: true
          name: puzzle_id
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Returns a page with playing field for the puzzle
          content:
            text/html:
              example: <html>...</html>
  /puzzle/{puzzle_id}/delete:
    get:
      summary: Used to get deletion page for a certain puzzle
      tags:
        - Puzzle
      parameters:
        - in: path
          required: true
          name: puzzle_id
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Returns a page with playing field for the puzzle
          content:
            text/html:
              example: <html>...</html>
    post:
      summary: Used to approve the puzzle deletion
      tags:
        - Puzzle
      parameters:
        - in: path
          required: true
          name: puzzle_id
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: confirmation
          schema:
            type: string
            example: Puzzle Name
      responses:
        "200":
          description: Returns the same page with error messages
          content:
            text/html:
              example: <html>...</html>
        "301":
          description: Redirects to /puzzle/list when the puzzle deleted successfully
          content:
            text/html:
              example: <html>...</html>
  /user/create:
    get:
      summary: Used to get a form for a new user creation
      tags:
        - User
      responses:
        "200":
          description: Returns a page for a new user creation
          content:
            text/html:
              example: <html>...</html>
    post:
      summary: Used to create a new user
      tags:
        - User
      parameters:
        - in: query
          name: nickname
          schema:
            type: string
            example: Player
        - in: query
          name: email
          schema:
            type: string
            example: player@test.org
        - in: query
          name: password
          schema: 
            type: string
            example: qweQWE123
        - in: query
          name: passwordConfirmation
          schema:
            type: string
            example: qweQWE123
      responses:
        "200":
          description: Returns the same page with error messages
          content:
            text/html:
              example: <html>...</html>
        "301":
          description: Redirects to /user/login when the user created successfully
          content:
            text/html:
              example: <html>...</html>
  /user/{user_id}/profile:
    get:
      summary: Used to get a profile page of a certain user
      tags:
        - User
      parameters:
        - in: path
          required: true
          name: user_id
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Returns a profile page of the user
          content: 
            text/html:
              example: <html>...</html>
  /user/{user_id}/edit:
    get:
      summary: Used to get a form to edit a user
      tags:
        - User
      responses:
        "200":
          description: Returns a page to edit the user
          content:
            text/html:
              example: <html>...</html>
    post:
      summary: Used to edit a user
      tags:
        - User
      parameters:
        - in: path
          required: true
          name: user_id
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: nickname
          schema:
            type: string
            example: Player
      responses:
        "200":
          description: Returns the same page with error messages
          content:
            text/html:
              example: <html>...</html>
        "301":
          description: Redirects to /user/{user_id}/profile when the user edited successfully
          content:
            text/html:
              example: <html>...</html>
  /user/{user_id}/reset-password:
    get:
      summary: Used to get a form to reset a password for a certain user
      tags:
        - User
      responses:
        "200":
          description: Returns a page to reset a password for the user
          content:
            text/html:
              example: <html>...</html>
    post:
      summary: Used to reset a password for a certain user
      tags:
        - User
      parameters:
        - in: path
          required: true
          name: user_id
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: password
          schema: 
            type: string
            example: qweQWE123
        - in: query
          name: passwordConfirmation
          schema:
            type: string
            example: qweQWE123
      responses:
        "200":
          description: Returns the same page with error messages
          content:
            text/html:
              example: <html>...</html>
        "301":
          description: Redirects to /user/{user_id}/profile when the password reset successfully
          content:
            text/html:
              example: <html>...</html>
  /user/{user_id}/delete:
    get:
      summary: Used to get a form to delete a certain user
      tags:
        - User
      parameters:
        - in: path
          required: true
          name: user_id
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Returns a page to delete the user
          content:
            text/html:
              example: <html>...</html>
    post:
      summary: Used to delete a certain user
      tags:
        - User
      parameters:
        - in: path
          required: true
          name: user_id
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: password
          schema: 
            type: string
            example: qweQWE123
      responses:
        "200":
          description: Returns the same page with error messages
          content:
            text/html:
              example: <html>...</html>
        "301":
          description: Redirects to / when the user deleted successfully
          content:
            text/html:
              example: <html>...</html>
  /user/list:
    get:
      summary: Used to get a list of users
      tags:
        - User
      parameters:
        - in: query
          name: page
          schema: 
            type: integer
            example: 1
        - in: query
          name: size
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Returns a list of users with applied pagination
          content:
            text/html:
              example: <html>...</html>
  /user/change-role:
    post:
      summary: Used to change a role of a certain user
      tags:
        - User
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: role
          schema:
            type: string
            example: PLAYER
      responses:
        "301":
          description: Redirects to a list of users saving the page position
  /user/change-status:
    post:
      summary: Used to change a status of a certain user
      tags:
        - User
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: status
          schema:
            type: boolean
            example: true
      responses:
        "301":
          description: Redirects to a list of users saving the page position
  /api/game/{puzzle_id}/check:
    post:
      summary: Used to check if the puzzle solved
      tags:
        - Game API
      parameters:
        - in: path
          required: true
          name: puzzle_id
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: cells
          schema:
            $ref: "#/components/schemas/Cells"
      responses:
        "201": 
          description: Applies the puzzle check, saves the state of the game and refreshes the page
  /api/game/{puzzle_id}/save-state:
    post:
      summary: Used to save the game state without checking the puzzle
      tags:
        - Game API
      parameters:
        - in: path
          required: true
          name: puzzle_id
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: cells
          schema:
            $ref: "#/components/schemas/Cells"
      responses:
        "201": 
          description: Saves the state of the game without checking the puzzle and refreshes the page
  /api/game/{puzzle_id}/hint:
    post:
      summary: Used to request hints for the puzzle
      tags:
        - Game API
      parameters:
        - in: path
          required: true
          name: puzzle_id
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: cells
          schema:
            $ref: "#/components/schemas/Cells"
      responses:
        "201": 
          description: Adds hints to the game, saves the state of the game, checks if the puzzlesolved and refreshes the page
components:
  schemas:
    GameStat:
      type: object
      properties:
        nickname:
          type: string
          example: Player1
        email:
          type: string
          example: player@test.org
        score:
          type: integer
          example: 200
    GameStats:
      type: array
      items:
        $ref: "#/components/schemas/GameStat"
    Puzzle:
      type: object
      required:
        - name
        - width
        - height
        - user
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name: 
          type: string
          example: My Puzzle
        width:
          type: integer
          minimum: 10
          maximum: 40
          example: 10
        height:
          type: integer
          minimum: 10
          maximum: 40
          example: 10
        visible:
          type: boolean
          example: true
        generated: 
          type: boolean
          example: true
        user:
          $ref: "#/components/schemas/User"
        cells:
          $ref: "#/components/schemas/Cells"
    Puzzles:
      type: array
      items:
        $ref: "#/components/schemas/Puzzle"
    User:
      type: object
      required:
        - nickname
        - email
        - password
        - passwordConfirmation
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nickname: 
          type: string
          example: Player1
        email: 
          type: string
          example: player@test.org
        password:
          type: string
          example: qweQWE123
        passwordConfirmation:
          type: string
          example: qweQWE123
        activated:
          type: boolean
          example: true
        score:
          type: integer
          example: 200
        role:
          type: string
          example: PLAYER
    Cell:
      type: object
      required:
        - x
        - y
      properties:
        x: 
          type: integer
          example: 1
        y:
          type: integer
          example: 1
    Cells:
      type: array
      items:
        $ref: "#/components/schemas/Cell"